<?php
function shift_cipher_menu() {
    $items = array();
    $items['shift_cipher'] = array(
            'title' => 'Shift Cipher',
            'type' => MENU_NORMAL_ITEM,
            'access callback' => TRUE,
            'page callback' => 'drupal_get_form',
            'page arguments' => array('shift_cipher_form'),
        );
        $items['shift_cipher_success_page'] = array(
                'title' => 'Shift Cipher Results',
                'type' => MENU_CALLBACK,
                'access callback' => TRUE,
                'page callback' => 'display_cipher_results',
            );
        return $items;
    }

function shift_cipher_form_submit($form, &$form_state) {
    $shift_value = $form_state['values']['shift_value'];
    $shift_direction = $form_state['values']['shift_direction'];
    $phrase = $form_state['values']['phrase'];
    $_SESSION['original_phrase'] = $phrase;
    $phrase = str_split(strtolower($form_state['values']['phrase']));

    $results = array();
    $alphabet = array(
    'a' => 0,
    'b' => 1,
    'c' => 2,
    'd' => 3,
    'e' => 4,
    'f' => 5,
    'g' => 6,
    'h' => 7,
    'i' => 8,
    'j' => 9,
    'k' => 10,
    'l' => 11,
    'm' => 12,
    'n' => 13,
    'o' => 14,
    'p' => 15,
    'q' => 16,
    'r' => 17,
    's' => 18,
    't' => 19,
    'u' => 20,
    'v' => 21,
    'w' => 22,
    'x' => 23,
    'y' => 24,
    'z' => 25
    );

    foreach ($phrase as $input) {
        if ((preg_match("/[a-zA-Z]/", $input))) {

            $input = $alphabet[$input];

            if ($shift_direction == 'right') {
                $offset = $input + $shift_value;
                if ($offset > 26) {
                    $offset = $offset - 26;
                }
            } elseif ($shift_direction == 'left') {
                $offset = $input - $shift_value;
                    if ($offset < 0) {
                        $offset = $offset + 26;
                    }
            }
            foreach ($alphabet as $key => $value) {
                if ($offset == $value) {
                    $offset = $key;
                }
            }
            array_push($results, $offset);
        } else {
            array_push($results, $input);
        }
    }

    $_SESSION['cipher_results'] = $results;
    $form_state['redirect'] = 'shift_cipher_success_page';
}

function shift_cipher_form_validate($form, &$form_state) {
    $shift_value = $form_state['values']['shift_value'];
    $shift_direction = $form_state['values']['shift_direction'];
    $phrase = $form_state['values']['phrase'];

}

function display_cipher_results() {
    $results = $_SESSION['cipher_results'];
    $results = implode("", $results);
    $phrase = $_SESSION['original_phrase'];
    $results = ("<h2>Your orginal phrase, ". '<strong>' . $phrase . '</strong>' .', has been converted into ' . '<strong>' . $results . '</strong>' . '</h2>');
    return $results;
}

function shift_cipher_form() {
    $form = array();
    $form['shift_value'] = array(
            '#title' => 'Shift Value',
            '#type' => 'textfield',
            '#description' => t('Please enter a number between 1 and 25.'),
            '#required' => TRUE,
            '#element_validate' => array('element_validate_integer_positive', 'element_validate_reasonable_range'),
        );
    $form['shift_direction'] = array(
            '#title' => 'Shift Direction',
            '#type' => 'textfield',
            '#description' => t('Would you like to shift left or right?'),
            '#required' => TRUE,
            '#element_validate' => array('element_validate_direction'),
        );
    $form['phrase'] = array(
            '#title' => 'Phrase',
            '#type' => 'textfield',
            '#description' => t('Enter a phrase you would like to convert.'),
            '#required' => TRUE,
            '#element_validate' => array('element_validate_special_char'),
        );
    $form['submit'] = array(
            '#type' => 'submit',
            '#value' => 'Create Cipher',
        );
    return $form;
}

function element_validate_reasonable_range($element) {
    if ($element['#value'] > 25 || $element['#value'] < 1) {
        form_error($element, t('Again, the instructions clearly ask for a number between 1 and 25!ðŸ˜¤'));
    }
}

function element_validate_direction($element) {
    if (($element['#value'] != 'right') && ($element['#value'] != 'left')) {
        form_error($element, t('Please enter right or left for direction'));
    }
}

function element_validate_special_char($element) {
    if(preg_match("/[^a-zA-Z.?!', ]/", $element['#value'])) {
        form_error($element, t("Please don't use numbers or special characters!!!"));
    }
}
